{"version":3,"sources":["components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","components/SearchBox/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsterList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAIaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEJ,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCPFC,G,MAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAO1B,OAAO,qBAAKP,UAAU,YAAf,SALCO,EAAYC,KAAI,SAACT,GACvB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCJhBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACxC,OACC,uBACCX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCEG,G,wDApCd,aAAe,IAAD,8BACb,gBAaDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACZC,SAAU,GACVJ,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBK,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEK,SAAUK,S,oBAO7C,WACC,MAAkCC,KAAKP,MAA/BC,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,YACZW,EAAmBP,EAASQ,QAAO,SAAC9B,GAAD,OACxCA,EAAQK,KAAK0B,cAAcC,SAASd,EAAYa,kBAEjD,OACC,sBAAK9B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCU,YAAY,iBACZC,aAAcgB,KAAKhB,eAEpB,cAAC,EAAD,CAAUJ,YAAaqB,W,GA/BTI,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ceaf6c71.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.styles.css\";\n\nexport const Card = ({ monster }) => {\n\treturn (\n\t\t<div className=\"card-container\">\n\t\t\t<img\n\t\t\t\talt=\"monster\"\n\t\t\t\tsrc={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n\t\t\t/>\n\t\t\t<h2>{monster.name}</h2>\n\t\t\t<p>{monster.email}</p>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\n\nimport { Card } from \"../Card/Card.component.jsx\";\nimport \"./CardList.styles.css\";\n\nexport const CardList = ({ monsterList }) => {\n\tconst monsters = () => {\n\t\treturn monsterList.map((monster) => {\n\t\t\treturn <Card key={monster.id} monster={monster} />;\n\t\t});\n\t};\n\n\treturn <div className=\"card-list\">{monsters()}</div>;\n};\n","import React from \"react\";\n\nimport \"./SearchBox.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\treturn (\n\t\t<input\n\t\t\tclassName=\"search\"\n\t\t\ttype=\"search\"\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n};\n","import React from \"react\";\n\nimport { CardList } from \"./components/CardList/CardList.component\";\nimport { SearchBox } from \"./components/SearchBox/SearchBox.component.jsx\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((users) => this.setState({ monsters: users }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"Search monster\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsterList={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}